<launch>

  <!-- Params -->
  <arg name="launch_driver" default="true" />

  <arg name="model" default="VLS128"/>
  <arg name="calibration" default="$(find-pkg-share velodyne_pointcloud)/params/VLS-128_FS1.yaml"/>
  <arg name="device_ip" default="192.168.1.201" />
  <arg name="sensor_frame" default="velodyne" />
  <arg name="base_frame" default="base_link" />
  <arg name="manager" default="velodyne_nodelet_manager" />
  <arg name="max_range" default="250.0" />
  <arg name="min_range" default="0.5" />
  <arg name="pcap" default="" />
  <arg name="port" default="2368" />
  <arg name="read_fast" default="false" />
  <arg name="read_once" default="false" />
  <arg name="repeat_delay" default="0.0" />
  <arg name="rpm" default="600.0" />
  <arg name="scan_phase" default="0.0" />
  <arg name="sensor_timestamp" default="false" />
  <arg name="laserscan_ring" default="-1" />
  <arg name="laserscan_resolution" default="0.007" />
  <arg name="num_points_threshold" default="300"/>
  <arg name="invalid_intensity" default="[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]"/>

  <!-- nodelet manager -->
  <node pkg="nodelet" exec="nodelet" name="$(var manager)" args="manager" />

  <!-- velodyne driver -->
  <node pkg="nodelet" exec="nodelet" name="$(var manager)_driver" args="load velodyne_driver/DriverNodelet $(var manager)" if="$(var launch_driver)">
    <param name="device_ip" value="$(var device_ip)" />
    <param name="frame_id" value="$(var sensor_frame)"/>
    <param name="model" value="$(var model)"/>
    <param name="pcap" value="$(var pcap)"/>
    <param name="port" value="$(var port)" />
    <param name="read_fast" value="$(var read_fast)"/>
    <param name="read_once" value="$(var read_once)"/>
    <param name="repeat_delay" value="$(var repeat_delay)"/>
    <param name="rpm" value="$(var rpm)"/>
    <param name="scan_phase" value="$(var scan_phase)"/>
    <param name="sensor_timestamp" value="$(var sensor_timestamp)" />
  </node>

  <!-- velodyne_packets to pointcloud -->
  <node pkg="nodelet" exec="nodelet" name="$(var manager)_cloud" args="load velodyne_pointcloud/CloudNodelet $(var manager)">
    <remap from="velodyne_points" to="pointcloud_raw" />
    <remap from="velodyne_points_ex" to="pointcloud_raw_ex" />
    <param name="calibration" value="$(var calibration)"/>
    <param name="max_range" value="$(var max_range)"/>
    <param name="min_range" value="$(var min_range)"/>
    <param name="num_points_threshold" value="$(var num_points_threshold)"/>
    <param name="invalid_intensity" value="$(var invalid_intensity)"/>
    <param name="scan_phase" value="$(var scan_phase)"/>
  </node>

  <!-- crop self -->
  <node pkg="nodelet" exec="nodelet" name="$(var manager)_crop_box_filter_self" args="load pointcloud_preprocessor/crop_box_filter_nodelet $(var manager)" output="log">
    <remap from="/input" to="pointcloud_raw_ex" />
    <remap from="/output" to="self_cropped/pointcloud_ex" />
    <remap from="/min_x" to="/vehicle_info/min_longitudinal_offset" />
    <remap from="/max_x" to="/vehicle_info/max_longitudinal_offset" />
    <remap from="/min_y" to="/vehicle_info/min_lateral_offset" />
    <remap from="/max_y" to="/vehicle_info/max_lateral_offset" />
    <remap from="/min_z" to="/vehicle_info/min_height_offset" />
    <remap from="/max_z" to="/vehicle_info/max_height_offset" />

    <param name="negative" value="True" />
    <param name="input_frame" value="$(var base_frame)" />
    <param name="output_frame" value="$(var base_frame)" />
  </node>

  <!-- crop mirror -->
  <node pkg="nodelet" exec="nodelet" name="$(var manager)_crop_box_filter_mirror" args="load pointcloud_preprocessor/crop_box_filter_nodelet $(var manager)" output="log">
    <remap from="/input" to="self_cropped/pointcloud_ex" />
    <remap from="/output" to="mirror_cropped/pointcloud_ex" />
    <remap from="/min_x" to="/vehicle_info/mirror/min_longitudinal_offset" />
    <remap from="/max_x" to="/vehicle_info/mirror/max_longitudinal_offset" />
    <remap from="/min_y" to="/vehicle_info/mirror/min_lateral_offset" />
    <remap from="/max_y" to="/vehicle_info/mirror/max_lateral_offset" />
    <remap from="/min_z" to="/vehicle_info/mirror/min_height_offset" />
    <remap from="/max_z" to="/vehicle_info/mirror/max_height_offset" />

    <param name="negative" value="True" />
    <param name="input_frame" value="$(var base_frame)" />
    <param name="output_frame" value="$(var base_frame)" />
  </node>

  <!-- fix distortion -->
  <node pkg="nodelet" exec="nodelet" name="$(var manager)_fix_distortion" args="load velodyne_pointcloud/InterpolateNodelet $(var manager)">
    <remap from="velodyne_points_ex" to="mirror_cropped/pointcloud_ex" />
    <remap from="velodyne_points_interpolate" to="rectified/pointcloud" />
    <remap from="velodyne_points_interpolate_ex" to="rectified/pointcloud_ex" />
  </node>

  <!-- PointCloud Outlier Filter -->
  <node pkg="nodelet" exec="nodelet" name="$(var manager)_ring_outlier_filter" args="load pointcloud_preprocessor/ring_outlier_filter_nodelet $(var manager)">
    <remap from="/input" to="rectified/pointcloud_ex" />
    <remap from="/output" to="outlier_filtered/pointcloud" />
  </node>

</launch>
